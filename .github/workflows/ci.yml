name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm run install:all
      
    - name: Run TypeScript type checking
      run: |
        cd frontend && npm run lint
        cd ../backend && npm run lint
        
    - name: Build project
      run: npm run build
      
    - name: Cache build artifacts
      uses: actions/cache@v3
      with:
        path: |
          frontend/.next
          backend/dist
        key: ${{ runner.os }}-build-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-build-

  deploy:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        
    - name: Restore build artifacts
      uses: actions/cache@v3
      with:
        path: |
          frontend/.next
          backend/dist
        key: ${{ runner.os }}-build-${{ github.sha }}
        
    - name: Deploy to production
      run: echo "Deployment would happen here"
      # In a real scenario, you would add deployment steps here
      # For example, deploying to Vercel, Netlify, or your own server
